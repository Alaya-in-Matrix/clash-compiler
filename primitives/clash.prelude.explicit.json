[ { "BlackBox" :
    { "name"      : "CLaSH.Prelude.Explicit.cblockRam"
    , "templateD" :
"~SYM[0]_block : block
  type ram_array is array (natural range <>) of ~TYP[7];
  signal ~SYM[1] : ram_array((~ARG[0]-1) downto 0); -- ram
  signal ~SYM[2] : ~TYP[7]; -- inp
  signal ~SYM[3] : ~TYP[7]; -- outp
begin
  ~SYM[2] <= ~ARG[7];

  process(~CLK[7])
  begin
    if rising_edge(~CLK[7]) then
      if ~ARG[5] then
        ~SYM[1](to_integer(~ARG[4])) <= ~SYM[2];
      end if;
      ~SYM[3] <= ~SYM[1](to_integer(~ARG[5]));
    end if;
  end process;

  ~RESULT <= ~SYM[3];
end block;"
    }
  }
, { "BlackBox" :
    { "name"      : "CLaSH.Prelude.Explicit.csassert"
    , "templateD" :
"~SYM[0]_block : block
begin
  -- pragma translate_off
  process(~CLK[1],~RST[1],~ARG[1],~ARG[2]) is
  begin
    if (rising_edge(~CLK[1]) or rising_edge(~RST[1])) then
      assert (~ARG[1] = ~ARG[2]) report (\"expected: \" & to_string (~ARG[2]) & \", actual: \" & to_string (~ARG[1])) severity error;
    end if;
  end process;
  -- pragma translate_on
  ~RESULT <= ~ARG[3];
end block;"
    }
  }
]
