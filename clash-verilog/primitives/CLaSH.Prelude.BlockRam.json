[ { "BlackBox" :
    { "name" : "CLaSH.Prelude.BlockRam.blockRam'"
    , "type" :
"blockRam' :: (KnownNat n, KnownNat m) -- (ARG[0],ARG[1])
           => SClock clk               -- clk,  ARG[2]
           -> Vec n a                  -- init, ARG[3]
           -> Signal' clk (Unsigned m) -- wr,   ARG[4]
           -> Signal' clk (Unsigned m) -- rd,   ARG[5]
           -> Signal' clk Bool         -- wren, ARG[6]
           -> Signal' clk a            -- din,  ARG[7]
           -> Signal' clk a"
    , "templateD" :
"// blockRam
~SIGD[~SYM[0]][3];
~SIGD[~SYM[1]][7];

initial begin
  ~SYM[0] = ~LIT[3];
end

always @(posedge ~CLK[2]) begin : blockRam_~COMPNAME_~SYM[3]
  if (~ARG[6]) begin
    ~SYM[0][~ARG[4]] <= ~ARG[7];
  end
  ~SYM[1] <= ~SYM[0][~ARG[5]];
end

assign ~RESULT = ~SYM[1];"
    }
  }
]
