{"name":"CλaSH","tagline":"CAES Language for Synchronous Hardware","body":"# Introduction\r\nCλaSH (pronounced ‘clash’) is a functional hardware description language that borrows both its syntax and semantics from the functional programming language Haskell. The merits of using a functional language to describe hardware comes from the fact that combinational circuits can be directly modeled as mathematical functions and that functional languages lend themselves very well at describing and (de-)composing mathematical functions. The CλaSH compiler transforms these high-level descriptions to low-level synthesizable VHDL.\r\n\r\nAn experimental version of the new CλaSH compiler and some examples can be found below.  \r\n**!! The compiler and the CλaSH Prelude library are subject to change !!**\r\n\r\n# Installation\r\nThe CλaSH compiler and Prelude library for circuit design only work with the\r\n[GHC](http://haskell.org/ghc) Haskell compiler version 7.8.* and up.\r\n\r\n1. Install **GHC (version 7.8.* or higher)**\r\n\r\n      * Download and install [GHC for your platform](http://www.haskell.org/ghc/download).\r\n        Unix user can use `./configure prefix=<LOCATION>` to set the installation\r\n        location.\r\n\r\n      * Make sure that the `bin` directory of **GHC** is in your `PATH`.\r\n\r\n2. Install **Cabal**\r\n\r\n      * Windows and OS X Mavericks:\r\n\r\n          * Download the [binary for cabal-install](http://www.haskell.org/cabal/download.html)\r\n          * Put the binary in a location mentioned in your `PATH`\r\n\r\n      * Other Unix systems:\r\n\r\n          * Download the [sources for cabal-install](http://hackage.haskell.org/package/cabal-install)\r\n          * Unpack (`tar xf`) the archive and `cd` to the directory\r\n          * Run `sh bootstrap.sh`\r\n          * Follow the instructions to add `cabal` to your `PATH`\r\n\r\n      * Run `cabal update`\r\n\r\n3. Install **CλaSH**\r\n\r\n      * Run `cabal install clash-ghc`\r\n\r\n4. Verify that everything is working by:\r\n\r\n      * Downloading the [FIR.hs](https://raw.github.com/christiaanb/clash2/master/examples/FIR.hs) example\r\n      * Run `clash --interactive FIR.hs`\r\n      * Execute, in the interpreter, the `:vhdl` command.\r\n      * Exit the interpreter using `:q`\r\n      * Examine the VHDL code in the `vhdl` directory\r\n\r\n# Documentation\r\n[Tutorial](http://hackage.haskell.org/package/clash-prelude/docs/CLaSH-Tutorial.html)  \r\n[Reference documentation](http://hackage.haskell.org/package/clash-prelude)\r\n\r\n# Examples\r\n[FIR.hs](https://raw.github.com/christiaanb/clash2/master/examples/FIR.hs)  \r\n[Calculator.hs](https://raw.github.com/christiaanb/clash2/master/examples/Calculator.hs)\r\n\r\n# Support\r\nFor updates and questions join the mailing list clash-langauge@googlegroups.com or read the [forum](https://groups.google.com/d/forum/clash-language).  \r\nBug reports for the CLaSH compiler: http://github.com/christiaanb/clash2/issues  \r\nBug reports for the CLaSH prelude library: http://github.com/christiaanb/clash-prelude/issues","google":"UA-42920604-1","note":"Don't delete this file! It's used internally to help with page regeneration."}